#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int chaveDivisao (long int chave, int TABLE_SIZE){

    return ((chave & 0x7FFFFFFF) % TABLE_SIZE);
}

struct index{

char nis[15];
char linha[2048];
};

int main(){

int size;
int hashSize = 50000;
int i;
char fileName[] = "bolsa.csv";
char indexName[] = "bolsa-hash.dat";

FILE *fwb = fopen(indexName, "wb");

struct index novo = {"\0","\0"};

printf("\nCriando Arquivo...\n");

for(i=0;i<hashSize;i++){

fwrite(&novo,sizeof(struct index),1,fwb);
if(((i % 100000) == 0) && (i != 0)){
printf("\n\t%d\n",i);
}
}
fclose(fwb);

FILE *f = fopen(fileName,"rb");
FILE *frb = fopen(indexName,"r+b");

fseek(frb,0,SEEK_END);
size = ftell(frb);


int cont = 0;
    char linha[2048];
    char nis[15];
    int n = 0;
    int coluna = 0;
    long posicao;
    char* campo;

fgets(linha, 2048, f);
    posicao = ftell(f);
    fgets(linha, 2048, f);
char nova_linha[2048];

printf("\nPercorrendo linhas: ");

    while(!feof(f)){


        coluna = 0;

        for(i=0; i<2048; i++){

        nova_linha[i] = linha[i];
    }
        campo = strtok(linha,"\t");

   while(campo){

            if(coluna == 7){

                strcpy(nis, campo);

		long int num = atol (nis);
                int chave = chaveDivisao(num, hashSize);

fseek(frb,chave * sizeof(struct index),SEEK_SET);

struct index temp;

fread(&temp,sizeof(struct index),1,frb);

fseek(frb,chave * sizeof(struct index),SEEK_SET);

                if(strcmp(temp.nis, "\0")==0){
                fwrite(&nis,sizeof(nis),1,frb);
                fwrite(&nova_linha,sizeof(nova_linha),1,frb);


               }else{
int cont = 0;
fseek(frb,chave * sizeof(struct index),SEEK_SET);


while(strcmp(temp.nis, "\0") != 0){
cont++;
fread(&temp,sizeof(struct index),1,frb);

}

fseek(frb,chave * sizeof(struct index),SEEK_SET);
fseek(frb,cont * sizeof(struct index),SEEK_CUR);

fwrite(&nis,sizeof(nis),1,frb);
                fwrite(&nova_linha,sizeof(nova_linha),1,frb);
}

}


            coluna++;

            campo = strtok(NULL,"\t");// A segunda palavra ate a proxima quebra \t Ã© pega

    }
    fgets(linha, 2048, f);
n++;
if(((n % 10000) == 0) && (n != 0)){
  printf("\n\t%d\n",n);
}
}

fclose(f);
fclose(frb);

return 0;
}
